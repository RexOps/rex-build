#
# (c) Jan Gehring <jan.gehring@gmail.com>
# 
# vim: set ts=2 sw=2 tw=0:
# vim: set expandtab:
   
use Rex -feature => ['0.42'];
use Rex::Misc::ShellBlock;
use Mojo::UserAgent;

do "auth.conf";

my $yaml =
  eval { local ( @ARGV, $/ ) = ( $ENV{HOME} . "/.build_config" ); <>; };
$yaml .= "\n";
our $config = Load($yaml);

task test => group => test => sub {

  my $perl_version = $ENV{perl_version};

  my $ua = Mojo::UserAgent->new;

  my $con_str =
      "http://$config->{jobcontrol}->{user}:$config->{jobcontrol}->{password}\@"
    . "$config->{jobcontrol}->{host}:$config->{jobcontrol}->{port}"
    . "/api/1.0/project/5bde00a59817c6e3e6e79cc4ad8a514a/node";

  my $tx = $ua->post(
    $con_str,
    json => {
      name => "rexops-perl-$perl_version-test-$$",
      type => "docker",
      parent =>
        "3a7f1fc9e58a8492fc625d8a16e85e76_c5fd214cdd0d2b3b4272e73b022ba5c2",
      data => {
        image => "rexops-perl-$perl_version:0.1",
        host =>
  "3a7f1fc9e58a8492fc625d8a16e85e76_1b21b0d71706897b69f108572c444d40_b0da275520918e23dd615e2a747528f1",
        command => "/usr/sbin/sshd -D",
      }
    }
  );

my ($docker_id, $ip);

if ( $tx->success ) {
  my $ref = $tx->res->json;

  $docker_id = $ref->{id};
  if ( !$docker_id ) {
    die "Error creating test VM";
  }

  my $qtx = $ua->get("$con_str/$docker_id");
  if ( $qtx->success ) {
    my $qref = $qtx->res->json;
    $ip = $qref->{provisioner}->[0]->{NetworkSettings}->{IPAddress};
  }
  else {
    die "Error getting info of test VM";
  }
}
else {
  die "Error creating test VM";
}
  
  shell_block "/bin/bash", <<EOS;

mkdir /tmp/test
cd /tmp/test
git clone $ENV{git_repo} test
cd test
git checkout $ENV{branch}

. \~/.bash_profile
perlbrew use perl-$perl_version
cpanm Dist::Zilla
dzil authordeps --missing | cpanm
dzil listdeps --missing | cpanm
cpanm -in TAP::Formatter::JUnit

cat >test.sh<<EOF
make clean
perl Makefile.PL
make
prove --blib --recurse --timer --formatter TAP::Formatter::JUnit >/tmp/junit_output.xml
EOF

chmod 755 test.sh

dzil run `pwd`/test.sh
EOS

  download "/tmp/junit_output.xml", "../junit_output.xml";

  $ua->delete( "$con_str/$docker_id");
};

1;
